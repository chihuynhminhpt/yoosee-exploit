#!/bin/sh
#
# app_updater.sh - Gwell IPC System app update script
#
# junshengzhang@gwell.cc, 2020-01-04
# Copyright (c) 2020 Gwelltimes Technology Co., Ltd. All Rights Reserved.
#
# Usage: app_updater.sh [filename]
#        default: filename=upgapp.bin.enc
#
# Warning: This File length limit: 8192 bytes
#

timeout=5
killall shell_debug
sleep 1
killall -0 shell_debug
while [ $? -eq 0 ]
do
    let timeout--
    if [ $timeout -eq 0 ]
    then
        echo "kill shell_debug failed, update cancel!"
	exit 1
    fi
    sleep 1
    killall -0 shell_debug
done
echo "kill shell_debug success"

timeout=5
killall wpa_supplicant
sleep 1
killall -0 wpa_supplicant
while [ $? -eq 0 ]
do
    let timeout--
    if [ $timeout -eq 0 ]
    then
        echo "kill wpa_supplicant failed, update cancel!"
	exit 1
    fi
    sleep 1
    killall -0 wpa_supplicant
done

echo "kill wpa_supplicant success"

free

wifi_is_8188fu=`ls /sys/module/ | grep 8188`
wifi_is_9083h=`ls /sys/module/ | grep 9083`
wifi_is_8731au=`ls /sys/module/ | grep 8731`
wifi_is_atbm603x=`ls /sys/module/ | grep atbm603x`
wifi_is_rda5995=`ls /sys/module/ | grep rdawfmac`

if [ "$wifi_is_8188fu" != "" ]
then
    echo -e "\e[1;32mWifi type: 8188fu\e[0m"
    rmmod -f rtl8188fu
elif [ "$wifi_is_9083h" != "" ]
then
    echo -e "\e[1;32mWifi type: 9083h\e[0m"
    rmmod -f 9083h
elif [ "$wifi_is_8731au" != "" ]
then
    echo -e "\e[1;32mWifi type: 8731au\e[0m"
    rmmod -f rtl8731au
elif [ "$wifi_is_atbm603x" != "" ]
then
    echo -e "\e[1;32mWifi type: atbm603x\e[0m"
    rmmod -f atbm603x_wifi_usb
elif [ "$wifi_is_rda5995" != "" ]
then
    echo -e "\e[1;32mWifi type: rda5995\e[0m"
    rmmod -f rdawfmac
else
    echo -e "\e[1;31mWifi type: unknown\e[0m"
fi

echo 3 > /proc/sys/vm/drop_caches
sleep 1
free

FILENAME="upgapp.bin.enc"
case $# in
  0)
    #echo "file name use default"
    ;;
  1)
    if [ "-h" == "$1" ] || [ "--help" == "$1" ]; then
      echo "
  Usage:
    $0 [[workpath] filename]

    default: workpath=$WORKPATH filename=\"$FILENAME\"
"
      exit
    else
      FILENAME="$1"
    fi
    ;;
  *)
    echo "error: too many parm($#) for $0"
    false
    ;;
esac

#check file exist
if [ -f "$FILENAME" ]; then
  #echo "file: \"$FILENAME\""
  true
else
  echo "error: file(\"$FILENAME\") not exist"
  false
fi

APP_NAME="app.bin"
KERNEL_NAME="uImage"

dd bs=4096 if=$FILENAME of=$KERNEL_NAME count=384 #2>/dev/null
dd bs=4096 if=$FILENAME of=$APP_NAME skip=384 #2>/dev/null
rm $FILENAME

DEV_MTD_APP=/dev/mtdblock6

if mountpoint -q /ipc
then
    echo "/ipc is mounted."
    umount /ipc
    if [ $? -ne 0 ]; then
        echo "error: /ipc umount fail"
        exit 1
        else
        echo -e "\e[1;31m***** Upgading, please do not power off!!! *****\e[0m"
        dd if="$APP_NAME" of=$DEV_MTD_APP bs=100K count=43 conv=fsync
	fi
else
    echo "/ipc is not mounted."
    echo -e "\e[1;31m***** Upgading, please do not power off!!! *****\e[0m"
    dd if="$APP_NAME" of=$DEV_MTD_APP bs=100K count=43 conv=fsync
fi
rm $APP_NAME

KERNEL_OLD="uImage_old"

DEV_MTD_KERNEL=/dev/mtdblock1
echo "upgrade kernel"

dd bs=96K if=/dev/mtd1ro of=$KERNEL_OLD count=16
NEW_MD5=`md5sum $KERNEL_NAME`
OLD_MD5=`md5sum $KERNEL_OLD`
NEW_MD5=${NEW_MD5:0:32}
OLD_MD5=${OLD_MD5:0:32}

if [ X$NEW_MD5 != X$OLD_MD5 ]; then
    dd if=$KERNEL_NAME of=$DEV_MTD_KERNEL bs=96K count=16 conv=fsync
    echo 180000 > /sys/kernel/partition_table/KERNEL/file_length
    sync
    echo "upgrade kernel success"
else
    echo "same kernel, no need to upgrade"
fi
rm $KERNEL_OLD
rm $KERNEL_NAME

echo "Done."