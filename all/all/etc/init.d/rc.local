#!/bin/sh

#print kernel error default
echo 4 > /proc/sys/kernel/printk

# mount jffs2 file-system. 
#/bin/mount -t jffs2 /dev/mtdblock5 /etc/jffs2
/bin/mount -t jffs2 /dev/mtdblock5 /rom
#/bin/mount -t jffs2 /dev/mtdblock5 /etc/jffs2
# note: can't recommend running other app before `mount` command.

mkdir /mnt/ramdisk
mkdir /mnt/disc1
/bin/mount -t tmpfs tmpfs /mnt/ramdisk

cp -R /etc/* /mnt/ramdisk
/bin/mount --bind /mnt/ramdisk/ /etc/

mkdir /mnt/ramdisk/tmp
/bin/mount --bind /mnt/ramdisk/tmp /tmp

#start syslogd & klogd, log rotated 3 files(200KB) to /var/log/messages
syslogd -D -n -O /var/log/messages -s 200 -b 3 & # -l prio
klogd -n & # -c prio

#create ramdisk
ifconfig lo 127.0.0.1

dmesg > /tmp/start_message

echo "/tmp/core_%e_%p_%t" > /proc/sys/kernel/core_pattern
#start system service

RESETKEY=`cat /sys/user-gpio/gpio81-RST`
if [ $RESETKEY -eq "0" ]; then 
  echo "Detected reset button has been pressed."
 
  i=1 
  while [ $i -le 6 ]
  do 
    if  [ -b /dev/mmcblk0p1 ]; then
      break
    fi
    let i++
    sleep 1
  done

  if [ -b /dev/mmcblk0p1 ]; then
    echo "Detected TF Card"
    cd /
#    mount -t vfat -o errors=continue /dev/mmcblk0p1 /mnt/disc1
    mount /dev/mmcblk0p1 /mnt/disc1

    if [ $? -eq 0 ]; then
      echo "mount sdcard ok"
      if [ -f /mnt/disc1/gwell_config/custom_setting.ini ]; then
        echo "Detected custom_setting.ini"
        cp /mnt/disc1/gwell_config/custom_setting.ini /rom/device.config
      fi 

      if [ -f /mnt/disc1/upg.bin.enc ]; then  
        echo "Detected /mnt/disc1/upg.bin.enc"
        ln -s /mnt/disc1/upg.bin.enc /tmp/upg.bin.enc
        gwellupdater.sh /tmp/upg.bin.enc
        if [ 0 -eq 0 ]; then 
          exit
        else
          rm -f /tmp/*
        fi
      fi
    fi
    umount /mnt/disc1/
  fi
fi 

# mount usr file-system. 
#/bin/mount -t squashfs /dev/mtdblock6 /usr
/bin/mount -t squashfs /dev/mtdblock6 /ipc
/bin/mount --bind /ipc /usr

#load camera module
/ipc/sbin/camera.sh setup

/ipc/setup.sh

## set min free reserve bytes
echo 1024 > /proc/sys/vm/min_free_kbytes
